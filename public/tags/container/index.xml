<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container on Universal</title>
    <link>https://jun23314.github.io/teamWebPage/tags/container/</link>
    <description>Recent content in Container on Universal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 May 2023 13:50:46 +0200</lastBuildDate><atom:link href="https://jun23314.github.io/teamWebPage/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Container - Second Blog</title>
      <link>https://jun23314.github.io/teamWebPage/container/secondblog/</link>
      <pubDate>Sun, 21 May 2023 13:50:46 +0200</pubDate>
      
      <guid>https://jun23314.github.io/teamWebPage/container/secondblog/</guid>
      <description>Container - First Blog에 이어서
운영체제 수준의 가상화 &amp;amp; 빠른 속도와 효율성
Virtual Machines(하드웨어 레벨의 가상화) Virtual Machines(VM ware, VirtualBox) 의 경우 하이퍼바이저(virtual box, Xen, KVM, VMware) 위에 Guest OS가 올라가는데 그 위에 Binary와 라이브러리 등을 모두 구성해야 하기에 무겁고 성능 저하가 발생합니다. (오버헤드 발생)
Docker(Linux)(운영체제 레벨의 가상화) VM과 HostOS 까지 설치는 동일합니다. 하이퍼바이저가 필요 없고 도커 엔진만 있으면 그 위에 어플리케이션과 바이너리 및 라이브러리가 포함된 컨테이너만 올리면 되는 구성입니다.</description>
    </item>
    
    <item>
      <title>Container - First Blog</title>
      <link>https://jun23314.github.io/teamWebPage/container/firstblog/</link>
      <pubDate>Sat, 20 May 2023 13:50:46 +0200</pubDate>
      
      <guid>https://jun23314.github.io/teamWebPage/container/firstblog/</guid>
      <description>Docker란? Docker는 컨테이너 기술 기반의 오픈소스 가상화 플랫폼입니다
container란? 운영체제 수준의 가상화 기술로 리눅스 커널을 공유하면서 프로세스를 격리된 환경에서 실행하는 기술입니다.
Docker의 시작 Docker는 2013년 3월 산타클라라에서 열린 Pycon에서 Solomon Hykes가 The future of Linux Ciontainers(리눅스 컨테이너의 미래)라는 제목으로 세션을 발표하면서 세상에 처음 알려졌습니다.
특징: 운영체제 수준의 가상화 컨테이너는 운영체제 수준의 가상화 기술입니다. 별도의 하드웨어 에뮬레이션 없이 리눅스 커널을 공유해 컨테이너를 실행하며, 게스트 OS 관리가 필요하지 않습니다.
빠른 속도와 효율성 하드웨어 에뮬레이션이 없으므로 컨테이너는 아주 빠르게 실행됩니다.</description>
    </item>
    
  </channel>
</rss>
